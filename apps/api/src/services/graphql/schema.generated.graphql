# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Open authentication (OAuth) provider"""
enum AuthProvider {
  discord
  facebook
  github
  google
  spotify
}

"""User authentication provider record"""
type AuthenticationDto {
  createdAt: DateTime!
  id: String!
  provider: AuthProvider!
  providerId: String!
  user: UserDto!
}

"""Comment for blog post"""
type CommentDto {
  author: UserDto!
  content: String!
  createdAt: DateTime!
  deleted: Boolean!
  deletedAt: DateTime
  id: Int!
  post: PostDto!
  updatedAt: DateTime
}

input CreateCommentInput {
  content: String!
}

input CreatePostInput {
  category: PostCategory!
  tags: [PostTag!]
}

input CreatePostLocaleInput {
  locale: Locale!
  published: Boolean
  slug: String!
  summary: String!
  title: String!
}

input CreateTestimonialInput {
  author: String!
  avatarUrl: String!
  published: Boolean
  quote: String!
  ref: String!
  title: String!
  x: String!
  y: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""Locale"""
enum Locale {
  en
  vi
}

type Mutation {
  createComment(input: CreateCommentInput!, postId: Int!): CommentDto!
  createPost(input: CreatePostInput!): PostDto
  createPostLocale(input: CreatePostLocaleInput!, postId: Int!): PostLocaleDto!
  createTestimonial(input: CreateTestimonialInput!): TestimonialDto!
  deleteComment(id: Int!): CommentDto
  deletePost(id: Int!): PostDto
  deletePostLocale(id: Int!): PostLocaleDto!
  deleteTestimonial(id: Int!): TestimonialDto
  deleteUser(id: Int!): UserDto
  setPostLocalePublication(id: Int!, published: Boolean!): PostLocaleDto!
  setTestimonialPublication(id: Int!, published: Boolean!): TestimonialDto
  updateComment(data: UpdateCommentInput!, id: Int!): CommentDto
  updatePost(id: Int!, input: UpdatePostInput!): PostDto
  updatePostLocale(id: Int!, input: UpdatePostLocaleInput!): PostLocaleDto!
  updateTestimonial(id: Int!, input: UpdateTestimonialInput!): TestimonialDto
}

"""Post category"""
enum PostCategory {
  code
  life
}

"""Blog post"""
type PostDto {
  category: PostCategory!
  comments: [CommentDto!]!
  createdAt: DateTime!
  deleted: Boolean!
  deletedAt: DateTime
  id: Int!
  locale(locale: Locale = en): PostLocaleDto!
  tags: [PostTag!]!
  updatedAt: DateTime
}

"""Blog post locale (site)"""
type PostLocaleDto {
  createdAt: DateTime!
  deleted: Boolean!
  deletedAt: DateTime
  id: Int!
  locale: Locale!
  post: PostDto!
  published: Boolean!
  publishedAt: DateTime
  slug: String!
  summary: String!
  title: String!
  updatedAt: DateTime
}

"""Post tag"""
enum PostTag {
  bicycle
  typescript
}

type Query {
  authentications: [AuthenticationDto!]!
  commentById(id: Int!): CommentDto
  comments: [CommentDto!]!
  me: UserDto!
  postById(id: Int!): PostDto
  postLocales(locale: Locale): [PostLocaleDto!]!
  posts: [PostDto!]!
  testimonialById(id: Int!): TestimonialDto!
  testimonials: [TestimonialDto!]!
  userById(id: Int!): UserDto
  users: [UserDto!]!
}

"""User role"""
enum Role {
  admin
  user
}

"""Display coordinate of testimonial in 2D plane (pixel or percentage)"""
type TestimonialCoordinateDto {
  x: String!
  y: String!
}

"""Testimonial"""
type TestimonialDto {
  author: String!
  avatarUrl: String!
  coordinate: TestimonialCoordinateDto!
  createdAt: DateTime!
  deleted: Boolean!
  deletedAt: DateTime
  id: Int!
  published: Boolean!
  publishedAt: DateTime
  quote: String!
  ref: String!
  title: String!
  updatedAt: DateTime
}

input UpdateCommentInput {
  content: String
}

input UpdatePostInput {
  category: PostCategory
  tags: [PostTag!]
}

input UpdatePostLocaleInput {
  locale: Locale
  published: Boolean
  slug: String
  summary: String
  title: String
}

input UpdateTestimonialInput {
  author: String
  avatarUrl: String
  published: Boolean
  quote: String
  ref: String
  title: String
  x: String
  y: String
}

type UserDto {
  authentications: [AuthenticationDto!]
  comments: [CommentDto!]!
  createdAt: DateTime!
  deleted: Boolean!
  deletedAt: DateTime
  email: String
  firstName: String!
  id: Int!
  lastConnectedAuthenticationProvider: AuthProvider!
  lastName: String!
  role: Role!
  updatedAt: DateTime
}