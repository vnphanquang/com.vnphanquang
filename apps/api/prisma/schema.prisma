// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  user
  admin
}

enum AuthProvider {
  google
  facebook
  github
  discord
  spotify
}

model User {
  id              Int              @id @default(autoincrement())
  avatarUrl       String?
  firstName       String
  lastName        String           @default("")
  role            Role             @default(user)
  email           String?          @unique
  // timestamps
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  deletedAt       DateTime?
  // relations
  comments        Comment[]
  authentications Authentication[]
}

model Authentication {
  id         String       @id @default(uuid())
  provider   AuthProvider
  providerId String
  // timestamps
  createdAt  DateTime     @default(now())
  // relations
  userId     Int
  user       User         @relation(fields: [userId], references: [id])

  @@unique([provider, providerId])
}

enum PostCategory {
  code
  life
}

enum PostTag {
  typescript
  bicycle
}

enum Locale {
  en
  vi
}

model Post {
  id        Int          @id @default(autoincrement())
  category  PostCategory
  tags      PostTag[]    @default([])
  // timestamps
  createdAt DateTime     @default(now())
  updatedAt DateTime?    @updatedAt
  deletedAt DateTime?
  // relations
  comments  Comment[]
  locales   PostLocale[]
}

model PostLocale {
  id          Int       @id @default(autoincrement())
  title       String
  summary     String
  slug        String    @unique
  locale      Locale
  // timestamps
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
  // relations
  postId      Int
  post        Post      @relation(fields: [postId], references: [id])
}

model Comment {
  id        Int       @id @default(autoincrement())
  content   String    @default("")
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
  // relations
  authorId  Int
  author    User      @relation(fields: [authorId], references: [id])

  postId Int
  post   Post @relation(fields: [postId], references: [id])
}

model Testimonial {
  id          Int       @id @default(autoincrement())
  quote       String
  author      String
  ref         String
  avatarUrl   String
  title       String
  x           String
  y           String
  // timestamps
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}
